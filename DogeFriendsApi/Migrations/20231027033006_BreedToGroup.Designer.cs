// <auto-generated />
using System;
using DogeFriendsApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DogeFriendsApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231027033006_BreedToGroup")]
    partial class BreedToGroup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BreedBreedGroup", b =>
                {
                    b.Property<int>("BreedGroupsId")
                        .HasColumnType("integer");

                    b.Property<int>("BreedsId")
                        .HasColumnType("integer");

                    b.HasKey("BreedGroupsId", "BreedsId");

                    b.HasIndex("BreedsId");

                    b.ToTable("BreedToGroup", (string)null);
                });

            modelBuilder.Entity("DogeFriendsApi.Models.Breed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CoatId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("SizeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CoatId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("SizeId");

                    b.ToTable("Breeds");
                });

            modelBuilder.Entity("DogeFriendsApi.Models.BreedGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("BreedGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Компаньоны"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Декоративные"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Охотничьи"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Рабочие и служебные"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Пастушьи"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Гончая"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Сторожевые"
                        });
                });

            modelBuilder.Entity("DogeFriendsApi.Models.Coat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Coats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Короткая"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Средняя"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Длинная"
                        });
                });

            modelBuilder.Entity("DogeFriendsApi.Models.Dog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BreedId")
                        .HasColumnType("integer");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BreedId");

                    b.HasIndex("UserId", "Name")
                        .IsUnique();

                    b.ToTable("Dogs");
                });

            modelBuilder.Entity("DogeFriendsApi.Models.Friendship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FriendId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FriendId");

                    b.HasIndex("UserId");

                    b.ToTable("Friendships");
                });

            modelBuilder.Entity("DogeFriendsApi.Models.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Маленькая"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Средняя"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Большая"
                        });
                });

            modelBuilder.Entity("DogeFriendsApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Hometown")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BreedBreedGroup", b =>
                {
                    b.HasOne("DogeFriendsApi.Models.BreedGroup", null)
                        .WithMany()
                        .HasForeignKey("BreedGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DogeFriendsApi.Models.Breed", null)
                        .WithMany()
                        .HasForeignKey("BreedsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DogeFriendsApi.Models.Breed", b =>
                {
                    b.HasOne("DogeFriendsApi.Models.Coat", "Coat")
                        .WithMany("Breeds")
                        .HasForeignKey("CoatId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DogeFriendsApi.Models.Size", "Size")
                        .WithMany("Breeds")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Coat");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("DogeFriendsApi.Models.Dog", b =>
                {
                    b.HasOne("DogeFriendsApi.Models.Breed", "Breed")
                        .WithMany("Dogs")
                        .HasForeignKey("BreedId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DogeFriendsApi.Models.User", "User")
                        .WithMany("Dogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Breed");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DogeFriendsApi.Models.Friendship", b =>
                {
                    b.HasOne("DogeFriendsApi.Models.User", "Friend")
                        .WithMany("FriendOf")
                        .HasForeignKey("FriendId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DogeFriendsApi.Models.User", "User")
                        .WithMany("Friends")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Friend");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DogeFriendsApi.Models.Breed", b =>
                {
                    b.Navigation("Dogs");
                });

            modelBuilder.Entity("DogeFriendsApi.Models.Coat", b =>
                {
                    b.Navigation("Breeds");
                });

            modelBuilder.Entity("DogeFriendsApi.Models.Size", b =>
                {
                    b.Navigation("Breeds");
                });

            modelBuilder.Entity("DogeFriendsApi.Models.User", b =>
                {
                    b.Navigation("Dogs");

                    b.Navigation("FriendOf");

                    b.Navigation("Friends");
                });
#pragma warning restore 612, 618
        }
    }
}
